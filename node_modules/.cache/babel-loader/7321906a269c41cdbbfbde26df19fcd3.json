{"ast":null,"code":"import _objectSpread from \"/Users/libertad/Documents/sos/fairfax-m4-stack-nfq/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/libertad/Documents/sos/fairfax-m4-stack-nfq/src/components/QuestionDetails/Form/index.js\";\nimport React, { Component } from 'react';\nimport './styles.scss';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#4595cb'\n    },\n    secondary: {\n      main: '#777777'\n    }\n  }\n});\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = inputId => ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState(prevState => {\n        const newAnswer = _objectSpread({}, prevState.answerToAdd, {\n          [inputId]: value\n        });\n\n        const newError = _objectSpread({}, prevState.error, {\n          [inputId]: value ? false : true\n        });\n\n        return {\n          answerToAdd: newAnswer,\n          error: newError\n        };\n      });\n    };\n\n    this.state = {\n      error: {\n        answer: false,\n        author: false\n      },\n      answerToAdd: {\n        answer: '',\n        author: '',\n        likes: 0,\n        date: ''\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAddAnswer = this.handleAddAnswer.bind(this);\n    this.resetAnswer = this.resetAnswer.bind(this);\n  }\n\n  handleAddAnswer() {\n    this.setState(prevState => {\n      const newAnswer = _objectSpread({}, prevState.answerToAdd, {\n        date: moment().format('YYYY-MM-DDTHH:mm:ss')\n      });\n\n      return {\n        answerToAdd: newAnswer\n      };\n    }, () => this.addAnswerToQuestionObject());\n  }\n\n  addAnswerToQuestionObject() {\n    const updatedQuestion = _objectSpread({}, this.props.questionItem);\n\n    updatedQuestion.answers.push(this.state.answerToAdd);\n    this.props.updateQuestion(updatedQuestion);\n    this.resetAnswer();\n  }\n\n  resetAnswer() {\n    this.setState({\n      answerToAdd: {\n        answer: '',\n        author: '',\n        likes: 0,\n        date: ''\n      },\n      error: {\n        answer: false,\n        author: false\n      }\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          classPaper = _this$props.classPaper,\n          classButton = _this$props.classButton;\n    const _this$state = this.state,\n          error = _this$state.error,\n          _this$state$answerToA = _this$state.answerToAdd,\n          answer = _this$state$answerToA.answer,\n          author = _this$state$answerToA.author;\n    return React.createElement(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classPaper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Nombre usuario\",\n      fullWidth: true,\n      value: author,\n      onChange: this.handleChange('author'),\n      variant: \"outlined\",\n      type: \"text\",\n      margin: \"normal\",\n      error: error.author,\n      helperText: error.author ? 'Por favor, rellena este campo' : '',\n      className: \"name__form--response\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      label: \"Respuesta\",\n      fullWidth: true,\n      value: answer,\n      onChange: this.handleChange('answer'),\n      type: \"text\",\n      variant: \"outlined\",\n      multiline: true,\n      rows: \"10\",\n      margin: \"normal\",\n      error: error.answer,\n      helperText: error.answer ? 'Por favor, rellena este campo' : '',\n      className: \"text__form--response\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      className: classButton,\n      onClick: this.resetAnswer,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"cancelar\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classButton,\n      onClick: this.handleAddAnswer,\n      disabled: !answer || !author,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"aceptar\"))))));\n  }\n\n}\n\nForm.propTypes = {\n  classPaper: PropTypes.string.isRequired,\n  classButton: PropTypes.string.isRequired,\n  updatedQuestion: PropTypes.func,\n  questionItem: PropTypes.object\n};\nexport default Form;","map":{"version":3,"sources":["/Users/libertad/Documents/sos/fairfax-m4-stack-nfq/src/components/QuestionDetails/Form/index.js"],"names":["React","Component","createMuiTheme","ThemeProvider","Paper","Grid","TextField","Button","PropTypes","moment","theme","palette","primary","main","secondary","Form","constructor","props","handleChange","inputId","target","value","setState","prevState","newAnswer","answerToAdd","newError","error","state","answer","author","likes","date","bind","handleAddAnswer","resetAnswer","format","addAnswerToQuestionObject","updatedQuestion","questionItem","answers","push","updateQuestion","render","classPaper","classButton","propTypes","string","isRequired","func","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles.scss';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#4595cb'\n    },\n    secondary: {\n      main: '#777777'\n    }\n  }\n});\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: {\n        answer: false,\n        author: false\n      },\n      answerToAdd: {\n        answer: '',\n        author: '',\n        likes: 0,\n        date: ''\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAddAnswer = this.handleAddAnswer.bind(this);\n    this.resetAnswer = this.resetAnswer.bind(this);\n  }\n\n  handleChange = inputId => ({ target: { value } }) => {\n    this.setState(prevState => {\n      const newAnswer = { ...prevState.answerToAdd, [inputId]: value };\n      const newError = { ...prevState.error, [inputId]: value ? false : true };\n      return { answerToAdd: newAnswer, error: newError };\n    });\n  };\n\n  handleAddAnswer() {\n    this.setState(\n      prevState => {\n        const newAnswer = { ...prevState.answerToAdd, date: moment().format('YYYY-MM-DDTHH:mm:ss') };\n        return { answerToAdd: newAnswer };\n      },\n      () => this.addAnswerToQuestionObject()\n    );\n  }\n\n  addAnswerToQuestionObject() {\n    const updatedQuestion = {\n      ...this.props.questionItem\n    };\n    updatedQuestion.answers.push(this.state.answerToAdd);\n    this.props.updateQuestion(updatedQuestion);\n    this.resetAnswer();\n  }\n\n  resetAnswer() {\n    this.setState({\n      answerToAdd: {\n        answer: '',\n        author: '',\n        likes: 0,\n        date: ''\n      },\n      error: {\n        answer: false,\n        author: false\n      }\n    });\n  }\n\n  render() {\n    const { classPaper, classButton } = this.props;\n    const {\n      error,\n      answerToAdd: { answer, author }\n    } = this.state;\n    return (\n      <ThemeProvider theme={theme}>\n        <Grid item xs={12}>\n          <Paper className={classPaper}>\n            <form noValidate autoComplete=\"off\">\n              <TextField label=\"Nombre usuario\" fullWidth value={author} onChange={this.handleChange('author')} variant=\"outlined\" type=\"text\" margin=\"normal\" error={error.author} helperText={error.author ? 'Por favor, rellena este campo' : ''} className=\"name__form--response\" />\n              <TextField label=\"Respuesta\" fullWidth value={answer} onChange={this.handleChange('answer')} type=\"text\" variant=\"outlined\" multiline rows=\"10\" margin=\"normal\" error={error.answer} helperText={error.answer ? 'Por favor, rellena este campo' : ''} className=\"text__form--response\" />\n              <div className=\"buttons__container\">\n                <Button variant=\"contained\" className={classButton} onClick={this.resetAnswer} color=\"secondary\">\n                  cancelar\n                </Button>\n                <Button variant=\"contained\" color=\"primary\" className={classButton} onClick={this.handleAddAnswer} disabled={!answer || !author}>\n                  aceptar\n                </Button>\n              </div>\n            </form>\n          </Paper>\n        </Grid>\n      </ThemeProvider>\n    );\n  }\n}\n\nForm.propTypes = {\n  classPaper: PropTypes.string.isRequired,\n  classButton: PropTypes.string.isRequired,\n  updatedQuestion: PropTypes.func,\n  questionItem: PropTypes.object\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}