{"ast":null,"code":"var _jsxFileName = \"/Users/libertad/Documents/sos/fairfax-m4-stack-nfq/src/components/StackList/index.js\";\nimport React, { Component, Fragment } from 'react';\nimport ModalInfo from './ModalInfo';\nimport Filter from './Filter/index';\nimport Question from './Question/index';\nimport Footer from '../Footer/index';\nimport FloatingActionButtons from './Button/index';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\nimport Header from '../Header/index';\nimport _ from 'lodash';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass StackList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.dialogueFunction = this.dialogueFunction.bind(this);\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    this.props.resetFilter();\n  }\n\n  dialogueFunction() {\n    this.setState(prevState => {\n      return {\n        isOpen: !prevState.isOpen\n      };\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          dataQuestion = _this$props.dataQuestion,\n          createNewQuestion = _this$props.createNewQuestion,\n          handleInputValue = _this$props.handleInputValue,\n          searchWord = _this$props.searchWord,\n          resetFilter = _this$props.resetFilter;\n    const isOpen = this.state.isOpen;\n    return React.createElement(\"div\", {\n      className: \"container__stacklist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"stacklist__main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Filter, {\n      handleInputValue: handleInputValue,\n      searchWord: searchWord,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), dataQuestion.length ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"question__list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, _.sortBy(dataQuestion, question => {\n      return new Date(question.date);\n    }).reverse().filter(question => {\n      return question.question.toLowerCase().includes(searchWord.toLowerCase()) || question.content.toLowerCase().includes(searchWord.toLowerCase()) || question.tags.toLowerCase().includes(searchWord.toLowerCase());\n    }).map(item => {\n      return React.createElement(\"li\", {\n        className: \"question__item\",\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Question, {\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    })), React.createElement(FloatingActionButtons, {\n      dialogueFunction: this.dialogueFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"error__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      color: \"primary\",\n      className: \"loading__gif\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"text__error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"No se puede conectar: comprueba tu conexi\\xF3n a Internet o que el servidor funcione correctamente\"))), isOpen && React.createElement(ModalInfo, {\n      dialogueFunction: this.dialogueFunction,\n      createNewQuestion: createNewQuestion,\n      arrLength: dataQuestion.length,\n      resetFilter: resetFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  }\n\n}\n\nStackList.propTypes = {\n  dataQuestion: PropTypes.arrayOf(PropTypes.object),\n  createNewQuestion: PropTypes.func,\n  handleInputValue: PropTypes.func,\n  searchWord: PropTypes.string\n};\nexport default StackList;","map":{"version":3,"sources":["/Users/libertad/Documents/sos/fairfax-m4-stack-nfq/src/components/StackList/index.js"],"names":["React","Component","Fragment","ModalInfo","Filter","Question","Footer","FloatingActionButtons","PropTypes","Header","_","CircularProgress","StackList","constructor","props","state","isOpen","dialogueFunction","bind","componentDidMount","window","scrollTo","componentWillUnmount","resetFilter","setState","prevState","render","dataQuestion","createNewQuestion","handleInputValue","searchWord","length","sortBy","question","Date","date","reverse","filter","toLowerCase","includes","content","tags","map","item","id","propTypes","arrayOf","object","func","string"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport ModalInfo from './ModalInfo';\nimport Filter from './Filter/index';\nimport Question from './Question/index';\nimport Footer from '../Footer/index';\nimport FloatingActionButtons from './Button/index';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\nimport Header from '../Header/index';\nimport _ from 'lodash';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass StackList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.dialogueFunction = this.dialogueFunction.bind(this);\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    this.props.resetFilter();\n  }\n\n  dialogueFunction() {\n    this.setState(prevState => {\n      return { isOpen: !prevState.isOpen };\n    });\n  }\n\n  render() {\n    const { dataQuestion, createNewQuestion, handleInputValue, searchWord, resetFilter } = this.props;\n    const { isOpen } = this.state;\n    return (\n      <div className=\"container__stacklist\">\n        <Header />\n        <main className=\"stacklist__main\">\n          <Filter handleInputValue={handleInputValue} searchWord={searchWord} />\n          {dataQuestion.length ? (\n            <Fragment>\n              <ul className=\"question__list\">\n                {_.sortBy(dataQuestion, question => {\n                  return new Date(question.date);\n                })\n                  .reverse()\n                  .filter(question => {\n                    return question.question.toLowerCase().includes(searchWord.toLowerCase()) || question.content.toLowerCase().includes(searchWord.toLowerCase()) || question.tags.toLowerCase().includes(searchWord.toLowerCase());\n                  })\n                  .map(item => {\n                    return (\n                      <li className=\"question__item\" key={item.id}>\n                        <Question item={item} />\n                      </li>\n                    );\n                  })}\n              </ul>\n              <FloatingActionButtons dialogueFunction={this.dialogueFunction} />\n            </Fragment>\n          ) : (\n            <div className=\"error__container\">\n              <CircularProgress color=\"primary\" className=\"loading__gif\" />\n              <p className=\"text__error\">No se puede conectar: comprueba tu conexión a Internet o que el servidor funcione correctamente</p>\n            </div>\n          )}\n        </main>\n        {isOpen && <ModalInfo dialogueFunction={this.dialogueFunction} createNewQuestion={createNewQuestion} arrLength={dataQuestion.length} resetFilter={resetFilter} />}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nStackList.propTypes = {\n  dataQuestion: PropTypes.arrayOf(PropTypes.object),\n  createNewQuestion: PropTypes.func,\n  handleInputValue: PropTypes.func,\n  searchWord: PropTypes.string\n};\n\nexport default StackList;\n"]},"metadata":{},"sourceType":"module"}