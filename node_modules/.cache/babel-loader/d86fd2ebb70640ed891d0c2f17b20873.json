{"ast":null,"code":"var _jsxFileName = \"/Users/libertad/Documents/sos/fairfax-m4-stack-nfq/src/components/App/index.js\";\nimport React, { Component } from 'react';\nimport { fetchQuestion } from '../../services/fetchQuestion';\nimport { updateQuestion } from '../../services/updateQuestion';\nimport StackList from '../StackList';\nimport './styles.scss';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Home from '../Home';\nimport QuestionDetails from '../QuestionDetails';\nimport { createQuestion } from '../../services/createQuestion';\nimport TeamInfo from '../TeamInfo';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataQuestion: [],\n      searchWord: ''\n    };\n    this.getQuestion = this.getQuestion.bind(this);\n    this.createNewQuestion = this.createNewQuestion.bind(this);\n    this.updateQuestionAnswer = this.updateQuestionAnswer.bind(this);\n    this.handleInputValue = this.handleInputValue.bind(this);\n    this.resetFilter = this.resetFilter.bind(this);\n  }\n\n  componentDidMount() {\n    this.getQuestion();\n  }\n\n  getQuestion() {\n    fetchQuestion().then(data => {\n      this.setState({\n        dataQuestion: data\n      });\n    });\n  }\n\n  createNewQuestion(question) {\n    createQuestion(question).then(questionData => {\n      const newArrQuestions = [...this.state.dataQuestion];\n      newArrQuestions.push(questionData);\n      this.setState({\n        dataQuestion: newArrQuestions\n      });\n    });\n  }\n\n  updateQuestionAnswer(question) {\n    updateQuestion(question).then(updatedQuestion => {\n      const newQuestionsArr = [...this.state.dataQuestion];\n      const index = newQuestionsArr.findIndex(question => question.id === updatedQuestion.id);\n      newQuestionsArr[index] = updatedQuestion;\n      this.setState({\n        dataQuestion: newQuestionsArr\n      });\n    }).catch(error => console.error('Error:', error));\n  }\n\n  handleInputValue(event) {\n    const searchWord = event.currentTarget.value;\n    this.setState({\n      searchWord: searchWord\n    });\n  }\n\n  resetFilter() {\n    this.setState({\n      searchWord: ''\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          dataQuestion = _this$state.dataQuestion,\n          searchWord = _this$state.searchWord;\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/home\",\n      render: () => React.createElement(Home, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/questions\",\n      render: () => React.createElement(StackList, {\n        dataQuestion: dataQuestion,\n        handleInputValue: this.handleInputValue,\n        searchWord: searchWord,\n        createNewQuestion: this.createNewQuestion,\n        resetFilter: this.resetFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/question/:id\",\n      render: routeProps => React.createElement(QuestionDetails, {\n        id: routeProps.match.params.id,\n        dataQuestion: dataQuestion,\n        updateQuestion: this.updateQuestionAnswer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/team\",\n      render: () => React.createElement(TeamInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      from: \"/\",\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/libertad/Documents/sos/fairfax-m4-stack-nfq/src/components/App/index.js"],"names":["React","Component","fetchQuestion","updateQuestion","StackList","Route","Switch","Redirect","Home","QuestionDetails","createQuestion","TeamInfo","App","constructor","props","state","dataQuestion","searchWord","getQuestion","bind","createNewQuestion","updateQuestionAnswer","handleInputValue","resetFilter","componentDidMount","then","data","setState","question","questionData","newArrQuestions","push","updatedQuestion","newQuestionsArr","index","findIndex","id","catch","error","console","event","currentTarget","value","render","routeProps","match","params"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAO,eAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AAC1BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,UAAU,EAAE;AAFD,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BF,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKG,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKI,WAAL,GAAmB,KAAKA,WAAL,CAAiBJ,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,WAAL;AACD;;AAEDA,EAAAA,WAAW,GAAG;AACZhB,IAAAA,aAAa,GAAGuB,IAAhB,CAAqBC,IAAI,IAAI;AAC3B,WAAKC,QAAL,CAAc;AACZX,QAAAA,YAAY,EAAEU;AADF,OAAd;AAGD,KAJD;AAKD;;AAEDN,EAAAA,iBAAiB,CAACQ,QAAD,EAAW;AAC1BlB,IAAAA,cAAc,CAACkB,QAAD,CAAd,CAAyBH,IAAzB,CAA8BI,YAAY,IAAI;AAC5C,YAAMC,eAAe,GAAG,CAAC,GAAG,KAAKf,KAAL,CAAWC,YAAf,CAAxB;AACAc,MAAAA,eAAe,CAACC,IAAhB,CAAqBF,YAArB;AACA,WAAKF,QAAL,CAAc;AAAEX,QAAAA,YAAY,EAAEc;AAAhB,OAAd;AACD,KAJD;AAKD;;AAEDT,EAAAA,oBAAoB,CAACO,QAAD,EAAW;AAC7BzB,IAAAA,cAAc,CAACyB,QAAD,CAAd,CACGH,IADH,CACQO,eAAe,IAAI;AACvB,YAAMC,eAAe,GAAG,CAAC,GAAG,KAAKlB,KAAL,CAAWC,YAAf,CAAxB;AACA,YAAMkB,KAAK,GAAGD,eAAe,CAACE,SAAhB,CAA0BP,QAAQ,IAAIA,QAAQ,CAACQ,EAAT,KAAgBJ,eAAe,CAACI,EAAtE,CAAd;AACAH,MAAAA,eAAe,CAACC,KAAD,CAAf,GAAyBF,eAAzB;AACA,WAAKL,QAAL,CAAc;AAAEX,QAAAA,YAAY,EAAEiB;AAAhB,OAAd;AACD,KANH,EAOGI,KAPH,CAOSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAPlB;AAQD;;AAEDhB,EAAAA,gBAAgB,CAACkB,KAAD,EAAQ;AACtB,UAAMvB,UAAU,GAAGuB,KAAK,CAACC,aAAN,CAAoBC,KAAvC;AACA,SAAKf,QAAL,CAAc;AACZV,MAAAA,UAAU,EAAEA;AADA,KAAd;AAGD;;AAEDM,EAAAA,WAAW,GAAG;AACZ,SAAKI,QAAL,CAAe;AAACV,MAAAA,UAAU,EAAE;AAAb,KAAf;AACD;;AAED0B,EAAAA,MAAM,GAAG;AAAA,wBAC8B,KAAK5B,KADnC;AAAA,UACCC,YADD,eACCA,YADD;AAAA,UACeC,UADf,eACeA,UADf;AAEP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,MAAM,EAAE,MAAM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,YAAlB;AAA+B,MAAA,MAAM,EAAE,MAAM,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAED,YAAzB;AAAuC,QAAA,gBAAgB,EAAE,KAAKM,gBAA9D;AAAgF,QAAA,UAAU,EAAEL,UAA5F;AAAwG,QAAA,iBAAiB,EAAE,KAAKG,iBAAhI;AAAmJ,QAAA,WAAW,EAAE,KAAKG,WAArK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,eAAlB;AAAkC,MAAA,MAAM,EAAEqB,UAAU,IAAI,oBAAC,eAAD;AAAiB,QAAA,EAAE,EAAEA,UAAU,CAACC,KAAX,CAAiBC,MAAjB,CAAwBV,EAA7C;AAAiD,QAAA,YAAY,EAAEpB,YAA/D;AAA6E,QAAA,cAAc,EAAE,KAAKK,oBAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB;AAA0B,MAAA,MAAM,EAAE,MAAM,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,GAAf;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAnEyB;;AAsE5B,eAAeT,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { fetchQuestion } from '../../services/fetchQuestion';\nimport { updateQuestion } from '../../services/updateQuestion';\nimport StackList from '../StackList';\nimport './styles.scss';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Home from '../Home';\nimport QuestionDetails from '../QuestionDetails';\nimport { createQuestion } from '../../services/createQuestion';\nimport TeamInfo from '../TeamInfo';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataQuestion: [],\n      searchWord: ''\n    };\n    this.getQuestion = this.getQuestion.bind(this);\n    this.createNewQuestion = this.createNewQuestion.bind(this);\n    this.updateQuestionAnswer = this.updateQuestionAnswer.bind(this);\n    this.handleInputValue = this.handleInputValue.bind(this);\n    this.resetFilter = this.resetFilter.bind(this);\n  }\n\n  componentDidMount() {\n    this.getQuestion();\n  }\n\n  getQuestion() {\n    fetchQuestion().then(data => {\n      this.setState({\n        dataQuestion: data\n      });\n    });\n  }\n\n  createNewQuestion(question) {\n    createQuestion(question).then(questionData => {\n      const newArrQuestions = [...this.state.dataQuestion];\n      newArrQuestions.push(questionData);\n      this.setState({ dataQuestion: newArrQuestions });\n    });\n  }\n\n  updateQuestionAnswer(question) {\n    updateQuestion(question)\n      .then(updatedQuestion => {\n        const newQuestionsArr = [...this.state.dataQuestion];\n        const index = newQuestionsArr.findIndex(question => question.id === updatedQuestion.id);\n        newQuestionsArr[index] = updatedQuestion;\n        this.setState({ dataQuestion: newQuestionsArr });\n      })\n      .catch(error => console.error('Error:', error));\n  }\n\n  handleInputValue(event) {\n    const searchWord = event.currentTarget.value;\n    this.setState({\n      searchWord: searchWord\n    });\n  }\n\n  resetFilter() {\n    this.setState( {searchWord: ''} );\n  }\n\n  render() {\n    const { dataQuestion, searchWord } = this.state;\n    return (\n      <Switch>\n        <Route exact path=\"/home\" render={() => <Home />} />\n        <Route exact path=\"/questions\" render={() => <StackList dataQuestion={dataQuestion} handleInputValue={this.handleInputValue} searchWord={searchWord} createNewQuestion={this.createNewQuestion} resetFilter={this.resetFilter} />} />\n        <Route exact path=\"/question/:id\" render={routeProps => <QuestionDetails id={routeProps.match.params.id} dataQuestion={dataQuestion} updateQuestion={this.updateQuestionAnswer} />} />\n        <Route exact path=\"/team\" render={() => <TeamInfo />} />\n        <Redirect from=\"/\" to=\"/home\" />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}