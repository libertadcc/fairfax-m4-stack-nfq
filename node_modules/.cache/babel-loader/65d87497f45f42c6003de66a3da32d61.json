{"ast":null,"code":"import _objectSpread from \"/Users/libertad/Documents/sos/fairfax-m4-stack-nfq/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/libertad/Documents/sos/fairfax-m4-stack-nfq/src/components/StackList/ModalInfo/index.js\";\nimport React, { Component } from 'react';\nimport './styles.scss';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#4595cb'\n    },\n    secondary: {\n      main: '#777777'\n    }\n  }\n});\n\nclass ModalInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = inputInfo => event => {\n      const inputValue = event.target.value;\n      this.setState(prevState => {\n        const newQuestion = _objectSpread({}, prevState.createQuestion, {\n          [inputInfo]: inputValue\n        });\n\n        const newError = _objectSpread({}, prevState.error, {\n          [inputInfo]: inputValue ? false : true\n        });\n\n        return {\n          error: newError,\n          createQuestion: newQuestion\n        };\n      });\n    };\n\n    this.state = {\n      createQuestion: {\n        question: '',\n        content: '',\n        tags: '',\n        author: ''\n      },\n      error: {\n        question: false,\n        content: false,\n        tags: false,\n        author: false\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.sendQuestion = this.sendQuestion.bind(this);\n  }\n\n  sendQuestion() {\n    const newQuestion = _objectSpread({}, this.state.createQuestion, {\n      answers: [],\n      date: moment().format('YYYY-MM-DDTHH:mm:ss'),\n      id: this.props.arrLength + 1\n    });\n\n    this.props.createNewQuestion(newQuestion);\n    this.setState({\n      createQuestion: {\n        question: '',\n        content: '',\n        tags: '',\n        author: ''\n      },\n      error: {\n        question: false,\n        content: false,\n        tags: false,\n        author: false\n      }\n    }, () => window.scrollTo(0, 0));\n    this.props.dialogueFunction();\n    this.props.resetFilter();\n  }\n\n  render() {\n    const _this$state = this.state,\n          _this$state$createQue = _this$state.createQuestion,\n          question = _this$state$createQue.question,\n          content = _this$state$createQue.content,\n          tags = _this$state$createQue.tags,\n          author = _this$state$createQue.author,\n          error = _this$state.error;\n    const dialogueFunction = this.props.dialogueFunction;\n    return React.createElement(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      open: true,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      className: \"dialog__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"A\\xF1ade una nueva pregunta\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      margin: \"normal\",\n      onChange: this.handleChange('author'),\n      value: author,\n      required: true,\n      label: \"Nombre Usuario\",\n      error: error.author,\n      helperText: error.author ? 'Por favor, rellena este campo' : '',\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      margin: \"normal\",\n      onChange: this.handleChange('tags'),\n      value: tags,\n      required: true,\n      label: \"Tags\",\n      error: error.tags,\n      helperText: error.tags ? 'Por favor, rellena este campo' : 'Introduce las etiquetas separadas por comas',\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      margin: \"normal\",\n      onChange: this.handleChange('question'),\n      value: question,\n      required: true,\n      label: \"Titulo Pregunta\",\n      error: error.question,\n      helperText: error.question ? 'Por favor, rellena este campo' : '',\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      margin: \"normal\",\n      onChange: this.handleChange('content'),\n      value: content,\n      required: true,\n      label: \"Detalle Pregunta\",\n      error: error.content,\n      helperText: error.content ? 'Por favor, rellena este campo' : '',\n      fullWidth: true,\n      multiline: true,\n      rows: \"7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      className: \"cancel__btn\",\n      color: \"secondary\",\n      onClick: dialogueFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Cancelar\"), React.createElement(Button, {\n      variant: \"contained\",\n      className: \"accept__btn\",\n      color: \"primary\",\n      disabled: !question || !content || !tags || !author,\n      onClick: this.sendQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Aceptar\"))));\n  }\n\n}\n\nModalInfo.propTypes = {\n  arrLength: PropTypes.number,\n  createNewQuestion: PropTypes.func,\n  dialogueFunction: PropTypes.func\n};\nexport default ModalInfo;","map":{"version":3,"sources":["/Users/libertad/Documents/sos/fairfax-m4-stack-nfq/src/components/StackList/ModalInfo/index.js"],"names":["React","Component","createMuiTheme","ThemeProvider","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","moment","PropTypes","theme","palette","primary","main","secondary","ModalInfo","constructor","props","handleChange","inputInfo","event","inputValue","target","value","setState","prevState","newQuestion","createQuestion","newError","error","state","question","content","tags","author","bind","sendQuestion","answers","date","format","id","arrLength","createNewQuestion","window","scrollTo","dialogueFunction","resetFilter","render","propTypes","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles.scss';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#4595cb'\n    },\n    secondary: {\n      main: '#777777'\n    }\n  }\n});\n\nclass ModalInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      createQuestion: {\n        question: '',\n        content: '',\n        tags: '',\n        author: ''\n      },\n      error: {\n        question: false,\n        content: false,\n        tags: false,\n        author: false\n      }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.sendQuestion = this.sendQuestion.bind(this);\n  }\n\n  handleChange = inputInfo => event => {\n    const inputValue = event.target.value;\n    this.setState(prevState => {\n      const newQuestion = { ...prevState.createQuestion, [inputInfo]: inputValue };\n      const newError = { ...prevState.error, [inputInfo]: inputValue ? false : true };\n      return { error: newError, createQuestion: newQuestion };\n    });\n  };\n\n  sendQuestion() {\n    const newQuestion = {\n      ...this.state.createQuestion,\n      answers: [],\n      date: moment().format('YYYY-MM-DDTHH:mm:ss'),\n      id: this.props.arrLength + 1\n    };\n    this.props.createNewQuestion(newQuestion);\n    this.setState(\n      {\n        createQuestion: {\n          question: '',\n          content: '',\n          tags: '',\n          author: ''\n        },\n        error: {\n          question: false,\n          content: false,\n          tags: false,\n          author: false\n        }\n      },\n      () => window.scrollTo(0, 0)\n    );\n    this.props.dialogueFunction();\n    this.props.resetFilter();\n  }\n\n  render() {\n    const {\n      createQuestion: { question, content, tags, author },\n      error\n    } = this.state;\n    const { dialogueFunction } = this.props;\n    return (\n      <ThemeProvider theme={theme}>\n        <Dialog open={true} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\" className=\"dialog__title\">\n            Añade una nueva pregunta\n          </DialogTitle>\n          <DialogContent>\n            <TextField margin=\"normal\" onChange={this.handleChange('author')} value={author} required label=\"Nombre Usuario\" error={error.author} helperText={error.author ? 'Por favor, rellena este campo' : ''} fullWidth />\n            <TextField margin=\"normal\" onChange={this.handleChange('tags')} value={tags} required label=\"Tags\" error={error.tags} helperText={error.tags ? 'Por favor, rellena este campo' : 'Introduce las etiquetas separadas por comas'} fullWidth />\n            <TextField margin=\"normal\" onChange={this.handleChange('question')} value={question} required label=\"Titulo Pregunta\" error={error.question} helperText={error.question ? 'Por favor, rellena este campo' : ''} fullWidth />\n            <TextField margin=\"normal\" onChange={this.handleChange('content')} value={content} required label=\"Detalle Pregunta\" error={error.content} helperText={error.content ? 'Por favor, rellena este campo' : ''} fullWidth multiline rows=\"7\" />\n          </DialogContent>\n          <DialogActions>\n            <Button variant=\"contained\" className=\"cancel__btn\" color=\"secondary\" onClick={dialogueFunction}>\n              Cancelar\n            </Button>\n            <Button variant=\"contained\" className=\"accept__btn\" color=\"primary\" disabled={!question || !content || !tags || !author} onClick={this.sendQuestion}>\n              Aceptar\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </ThemeProvider>\n    );\n  }\n}\n\nModalInfo.propTypes = {\n  arrLength: PropTypes.number,\n  createNewQuestion: PropTypes.func,\n  dialogueFunction: PropTypes.func\n};\n\nexport default ModalInfo;\n"]},"metadata":{},"sourceType":"module"}