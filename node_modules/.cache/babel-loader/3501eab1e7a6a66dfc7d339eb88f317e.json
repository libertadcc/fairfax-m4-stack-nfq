{"ast":null,"code":"import _slicedToArray from \"/Users/libertad/Documents/sos/fairfax-m4-stack-nfq/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/libertad/Documents/sos/fairfax-m4-stack-nfq/src/components/TreeCover.js\";\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header.js';\nimport Modal from './Modal.js';\nimport Slider from '@material-ui/core/Slider';\nimport '../styles/treeCover.css';\n\nfunction TreeCover({\n  info\n}) {\n  const valuetext = value => {\n    return \"\".concat(value, \"\\xB0C\");\n  };\n\n  const _useState = useState([2005, 2012]),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const onChangeDate = (event, newValue) => {\n    setValue(newValue);\n    const startDate = newValue[0];\n    const endDate = newValue[1];\n  };\n\n  console.log(info);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Header, {\n    name: info.name,\n    element: \"treeCover\",\n    id: info.id,\n    description: info.description,\n    type: info.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"treeCover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    className: \"slider\",\n    value: value,\n    onChange: onChangeDate,\n    valueLabelDisplay: \"auto\",\n    \"aria-labelledby\": \"range-slider\",\n    getAriaValueText: valuetext,\n    step: info.step,\n    min: 2001,\n    max: 2017,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(Modal, {\n    description: info.description,\n    id: info.id,\n    type: info.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}\n\nexport default TreeCover;","map":{"version":3,"sources":["/Users/libertad/Documents/sos/fairfax-m4-stack-nfq/src/components/TreeCover.js"],"names":["React","useState","useEffect","Header","Modal","Slider","TreeCover","info","valuetext","value","setValue","onChangeDate","event","newValue","startDate","endDate","console","log","name","id","description","type","step"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,yBAAP;;AAGA,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAA2B;AAEzB,QAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,qBAAUA,KAAV;AACD,GAFD;;AAFyB,oBAMCR,QAAQ,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CANT;AAAA;AAAA,QAMlBQ,KANkB;AAAA,QAMXC,QANW;;AAQzB,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCH,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACA,UAAMC,SAAS,GAAGD,QAAQ,CAAC,CAAD,CAA1B;AACA,UAAME,OAAO,GAAGF,QAAQ,CAAC,CAAD,CAAxB;AACD,GAJD;;AAMAG,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEA,IAAI,CAACW,IAAnB;AAAyB,IAAA,OAAO,EAAC,WAAjC;AAA6C,IAAA,EAAE,EAAEX,IAAI,CAACY,EAAtD;AAA0D,IAAA,WAAW,EAAEZ,IAAI,CAACa,WAA5E;AAAyF,IAAA,IAAI,EAAEb,IAAI,CAACc,IAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,KAAK,EAAEZ,KAFT;AAGE,IAAA,QAAQ,EAAEE,YAHZ;AAIE,IAAA,iBAAiB,EAAC,MAJpB;AAKE,uBAAgB,cALlB;AAME,IAAA,gBAAgB,EAAEH,SANpB;AAOE,IAAA,IAAI,EAAED,IAAI,CAACe,IAPb;AAQE,IAAA,GAAG,EAAE,IARP;AASE,IAAA,GAAG,EAAE,IATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,EAmBE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAEf,IAAI,CAACa,WAAzB;AAAsC,IAAA,EAAE,EAAEb,IAAI,CAACY,EAA/C;AAAmD,IAAA,IAAI,EAAEZ,IAAI,CAACc,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AAwBD;;AAED,eAAef,SAAf","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport Header from './Header.js';\nimport Modal from './Modal.js';\nimport Slider from '@material-ui/core/Slider';\nimport '../styles/treeCover.css';\n\n\nfunction TreeCover({info}) {\n \n  const valuetext = (value) => {\n    return `${value}Â°C`;\n  }\n\n  const [value, setValue] = useState([2005, 2012]);\n\n  const onChangeDate = (event, newValue) => {\n    setValue(newValue);\n    const startDate = newValue[0];\n    const endDate = newValue[1];\n  };\n\n  console.log(info);\n  return (\n    <div >\n      <Header name={info.name} element='treeCover' id={info.id} description={info.description} type={info.type} />\n\n      <div id=\"treeCover\">\n        <Slider\n          className=\"slider\"\n          value={value}\n          onChange={onChangeDate}\n          valueLabelDisplay=\"auto\"\n          aria-labelledby=\"range-slider\"\n          getAriaValueText={valuetext}\n          step={info.step}\n          min={2001}\n          max={2017}\n          \n        />\n      </div>\n      \n\n      <Modal description={info.description} id={info.id} type={info.type}/>\n\n    </div>\n  )\n}\n\nexport default TreeCover"]},"metadata":{},"sourceType":"module"}